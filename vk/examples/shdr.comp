#version 450

 layout(local_size_x_id = 0) in;

// layout(local_size_x_id = 0, local_size_y_id = 1) in; // workgroup size defined with specialization constants. On cpp side there is associated SpecializationInfo entry in PipelineShaderStageCreateInfo -->
// layout(push_constant) uniform Parameters {           // specify push constants. on cpp side its layout is fixed at PipelineLayout, and values are provided via vk::CommandBuffer::pushConstants()
//    uint Width;
//    uint Height;
// 	float a;
// } params;

layout(std430, binding = 0) buffer lay0 { float arr[]; };
// layout(std430, binding = 1) buffer lay1 { float arr_x[]; };

void main(){
   // drop threads outside the buffer dimensions.
   // if(params.Width <= gl_GlobalInvocationID.x || params.Height <= gl_GlobalInvocationID.y){
   //    return;
   // }
   // const uint id = params.Width*gl_GlobalInvocationID.y + gl_GlobalInvocationID.x; // current offset
   const uint id = gl_GlobalInvocationID.x;
   arr[id] = id;
}